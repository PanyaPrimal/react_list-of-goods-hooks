{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","sortType","NONE","reorderOptions","setReorderOptions","reset","useEffect","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","isResetButtonVisible","className","type","cn","onClick","prevState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,IACd,MAA4CC,mBAAyB,CACnEC,YAAY,EACZC,SAAUL,EAASM,OAFrB,mBAAOC,EAAP,KAAuBC,EAAvB,KAKQH,EAAyBE,EAAzBF,SAAUD,EAAeG,EAAfH,WAEZK,EAAQ,WACZD,EAAkB,CAChBJ,YAAY,EACZC,SAAUL,EAASM,QAIvBI,qBAAU,WACR,OAAO,WACLD,OAED,IAEH,IA4CME,EAvBoB,WACxB,IAAIA,EAAY,UAAOV,GAEvB,OAAQI,GACN,KAAKL,EAASY,SACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MAEF,KAAKf,EAASiB,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAW7C,OAJId,IACFO,EAAeA,EAAaQ,WAGvBR,EAGYS,GACfC,EAAuBhB,IAAaL,EAASM,MAAQF,EAE3D,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYnB,IAAaL,EAASY,WAGtCa,QA3DmB,WACzBjB,EAAkB,CAChBJ,YAAY,EACZC,SAAUL,EAASY,YA+CjB,iCAcA,wBACEW,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WAAYnB,IAAaL,EAASiB,SAGtCQ,QAlEa,WACnBjB,EAAkB,CAChBJ,YAAY,EACZC,SAAUL,EAASiB,UAsDjB,4BAcA,wBACEM,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAAapB,IAGjBqB,QAzEQ,WACdjB,GAAkB,SAACkB,GAAD,mBAAC,eACdA,GADa,IAEhBtB,YAAasB,EAAUtB,iBA6DrB,qBAcCiB,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAShB,EAHX,sBAUJ,6BACGE,EAAagB,KAAI,SAACC,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,Y,SAzId5B,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KCfL6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cd48908b.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function App() {\n  const [reorderOptions, setReorderOptions] = useState<ReorderOptions>({\n    isReversed: false,\n    sortType: SortType.NONE,\n  });\n\n  const { sortType, isReversed } = reorderOptions;\n\n  const reset = () => {\n    setReorderOptions({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  useEffect(() => {\n    return () => {\n      reset();\n    };\n  }, []);\n\n  const sortAlphabetically = () => {\n    setReorderOptions({\n      isReversed: false,\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  const sortByLength = () => {\n    setReorderOptions({\n      isReversed: false,\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  const reverse = () => {\n    setReorderOptions((prevState) => ({\n      ...prevState,\n      isReversed: !prevState.isReversed,\n    }));\n  };\n\n  const getReorderedGoods = (): string[] => {\n    let visibleGoods = [...goodsFromServer];\n\n    switch (sortType) {\n      case SortType.ALPHABET:\n        visibleGoods.sort((a, b) => a.localeCompare(b));\n        break;\n\n      case SortType.LENGTH:\n        visibleGoods.sort((a, b) => a.length - b.length);\n        break;\n\n      default:\n        break;\n    }\n\n    if (isReversed) {\n      visibleGoods = visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  const visibleGoods = getReorderedGoods();\n  const isResetButtonVisible = sortType !== SortType.NONE || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {isResetButtonVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map((good) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}